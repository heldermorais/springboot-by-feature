spring.application.name=petclinic-by-feature

server.servlet.context-path=/petclinic
server.port=19080


# database init, supports mysql too
database=postgres
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost/petclinic}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASS:postgres}
# SQL is written to be idempotent so this is safe
spring.sql.init.mode=always

spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
#spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false

# Internationalization
#spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*

# Logging
#logging.level.org.springframework=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
#spring.web.resources.cache.cachecontrol.max-age=12h